/* gwebenginevalaplugin.h generated by valac 0.56.3, the Vala compiler, do not modify */

#ifndef ____GWEBENGINEVALAPLUGIN_H__
#define ____GWEBENGINEVALAPLUGIN_H__

#include <gwebengine.h>
#include <glib-object.h>
#include <glib.h>
#include <gmodule.h>

G_BEGIN_DECLS

#if !defined(VALA_EXTERN)
#if defined(_MSC_VER)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

#define TYPE_PLUGIN (plugin_get_type ())
#define PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_PLUGIN, Plugin))
#define PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_PLUGIN, PluginClass))
#define IS_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_PLUGIN))
#define IS_PLUGIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_PLUGIN))
#define PLUGIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_PLUGIN, PluginClass))

typedef struct _Plugin Plugin;
typedef struct _PluginClass PluginClass;
typedef struct _PluginPrivate PluginPrivate;

struct _Plugin {
	GWebEngineMain parent_instance;
	PluginPrivate * priv;
};

struct _PluginClass {
	GWebEngineMainClass parent_class;
};

VALA_EXTERN GType plugin_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (Plugin, g_object_unref)
VALA_EXTERN gboolean plugin_key_event (Plugin* self,
                           GWebEngineKeyEvent* e);
VALA_EXTERN gboolean plugin_show_location (Plugin* self);
VALA_EXTERN gboolean plugin_show_find (Plugin* self);
VALA_EXTERN void plugin_main (Plugin* self);
VALA_EXTERN Plugin* plugin_new (void);
VALA_EXTERN Plugin* plugin_construct (GType object_type);
VALA_EXTERN GType register_plugin (GModule* module);

G_END_DECLS

#endif
