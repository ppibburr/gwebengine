/* gwebengine.h generated by valac 0.56.3, the Vala compiler, do not modify */

#ifndef ____GWEBENGINE_H__
#define ____GWEBENGINE_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <gtk/gtkx.h>

G_BEGIN_DECLS

#if !defined(VALA_EXTERN)
#if defined(_MSC_VER)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

#define GWEB_ENGINE_TYPE_PLUGIN_ERROR (gweb_engine_plugin_error_get_type ())

#define GWEB_ENGINE_TYPE_PLUGIN (gweb_engine_plugin_get_type ())
#define GWEB_ENGINE_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GWEB_ENGINE_TYPE_PLUGIN, GWebEnginePlugin))
#define GWEB_ENGINE_IS_PLUGIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GWEB_ENGINE_TYPE_PLUGIN))
#define GWEB_ENGINE_PLUGIN_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), GWEB_ENGINE_TYPE_PLUGIN, GWebEnginePluginIface))

typedef struct _GWebEnginePlugin GWebEnginePlugin;
typedef struct _GWebEnginePluginIface GWebEnginePluginIface;

#define GWEB_ENGINE_TYPE_PLUGIN_LOADER (gweb_engine_plugin_loader_get_type ())
#define GWEB_ENGINE_PLUGIN_LOADER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GWEB_ENGINE_TYPE_PLUGIN_LOADER, GWebEnginePluginLoader))
#define GWEB_ENGINE_PLUGIN_LOADER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GWEB_ENGINE_TYPE_PLUGIN_LOADER, GWebEnginePluginLoaderClass))
#define GWEB_ENGINE_IS_PLUGIN_LOADER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GWEB_ENGINE_TYPE_PLUGIN_LOADER))
#define GWEB_ENGINE_IS_PLUGIN_LOADER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GWEB_ENGINE_TYPE_PLUGIN_LOADER))
#define GWEB_ENGINE_PLUGIN_LOADER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GWEB_ENGINE_TYPE_PLUGIN_LOADER, GWebEnginePluginLoaderClass))

typedef struct _GWebEnginePluginLoader GWebEnginePluginLoader;
typedef struct _GWebEnginePluginLoaderClass GWebEnginePluginLoaderClass;

#define GWEB_ENGINE_TYPE_MAIN (gweb_engine_main_get_type ())
#define GWEB_ENGINE_MAIN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GWEB_ENGINE_TYPE_MAIN, GWebEngineMain))
#define GWEB_ENGINE_MAIN_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GWEB_ENGINE_TYPE_MAIN, GWebEngineMainClass))
#define GWEB_ENGINE_IS_MAIN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GWEB_ENGINE_TYPE_MAIN))
#define GWEB_ENGINE_IS_MAIN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GWEB_ENGINE_TYPE_MAIN))
#define GWEB_ENGINE_MAIN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GWEB_ENGINE_TYPE_MAIN, GWebEngineMainClass))

typedef struct _GWebEngineMain GWebEngineMain;
typedef struct _GWebEngineMainClass GWebEngineMainClass;
typedef struct _GWebEnginePluginLoaderPrivate GWebEnginePluginLoaderPrivate;
typedef struct _GWebEngineMainPrivate GWebEngineMainPrivate;

#define GWEB_ENGINE_TYPE_WEB_VIEW (gweb_engine_web_view_get_type ())
#define GWEB_ENGINE_WEB_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GWEB_ENGINE_TYPE_WEB_VIEW, GWebEngineWebView))
#define GWEB_ENGINE_WEB_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GWEB_ENGINE_TYPE_WEB_VIEW, GWebEngineWebViewClass))
#define GWEB_ENGINE_IS_WEB_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GWEB_ENGINE_TYPE_WEB_VIEW))
#define GWEB_ENGINE_IS_WEB_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GWEB_ENGINE_TYPE_WEB_VIEW))
#define GWEB_ENGINE_WEB_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GWEB_ENGINE_TYPE_WEB_VIEW, GWebEngineWebViewClass))

typedef struct _GWebEngineWebView GWebEngineWebView;
typedef struct _GWebEngineWebViewClass GWebEngineWebViewClass;

#define GWEB_ENGINE_TYPE_EVENT (gweb_engine_event_get_type ())
#define GWEB_ENGINE_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GWEB_ENGINE_TYPE_EVENT, GWebEngineEvent))
#define GWEB_ENGINE_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GWEB_ENGINE_TYPE_EVENT, GWebEngineEventClass))
#define GWEB_ENGINE_IS_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GWEB_ENGINE_TYPE_EVENT))
#define GWEB_ENGINE_IS_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GWEB_ENGINE_TYPE_EVENT))
#define GWEB_ENGINE_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GWEB_ENGINE_TYPE_EVENT, GWebEngineEventClass))

typedef struct _GWebEngineEvent GWebEngineEvent;
typedef struct _GWebEngineEventClass GWebEngineEventClass;
typedef struct _GWebEngineEventPrivate GWebEngineEventPrivate;

#define GWEB_ENGINE_TYPE_KEY_EVENT (gweb_engine_key_event_get_type ())
#define GWEB_ENGINE_KEY_EVENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GWEB_ENGINE_TYPE_KEY_EVENT, GWebEngineKeyEvent))
#define GWEB_ENGINE_KEY_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GWEB_ENGINE_TYPE_KEY_EVENT, GWebEngineKeyEventClass))
#define GWEB_ENGINE_IS_KEY_EVENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GWEB_ENGINE_TYPE_KEY_EVENT))
#define GWEB_ENGINE_IS_KEY_EVENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GWEB_ENGINE_TYPE_KEY_EVENT))
#define GWEB_ENGINE_KEY_EVENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GWEB_ENGINE_TYPE_KEY_EVENT, GWebEngineKeyEventClass))

typedef struct _GWebEngineKeyEvent GWebEngineKeyEvent;
typedef struct _GWebEngineKeyEventClass GWebEngineKeyEventClass;
typedef struct _GWebEngineKeyEventPrivate GWebEngineKeyEventPrivate;

#define GWEB_ENGINE_TYPE_WEB_SETTINGS (gweb_engine_web_settings_get_type ())
#define GWEB_ENGINE_WEB_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GWEB_ENGINE_TYPE_WEB_SETTINGS, GWebEngineWebSettings))
#define GWEB_ENGINE_WEB_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GWEB_ENGINE_TYPE_WEB_SETTINGS, GWebEngineWebSettingsClass))
#define GWEB_ENGINE_IS_WEB_SETTINGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GWEB_ENGINE_TYPE_WEB_SETTINGS))
#define GWEB_ENGINE_IS_WEB_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GWEB_ENGINE_TYPE_WEB_SETTINGS))
#define GWEB_ENGINE_WEB_SETTINGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GWEB_ENGINE_TYPE_WEB_SETTINGS, GWebEngineWebSettingsClass))

typedef struct _GWebEngineWebSettings GWebEngineWebSettings;
typedef struct _GWebEngineWebSettingsClass GWebEngineWebSettingsClass;
typedef struct _GWebEngineWebSettingsPrivate GWebEngineWebSettingsPrivate;
typedef struct _GWebEngineWebViewPrivate GWebEngineWebViewPrivate;

#define GWEB_ENGINE_TYPE_JS_RESULT (gweb_engine_js_result_get_type ())
#define GWEB_ENGINE_JS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GWEB_ENGINE_TYPE_JS_RESULT, GWebEngineJSResult))
#define GWEB_ENGINE_JS_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GWEB_ENGINE_TYPE_JS_RESULT, GWebEngineJSResultClass))
#define GWEB_ENGINE_IS_JS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GWEB_ENGINE_TYPE_JS_RESULT))
#define GWEB_ENGINE_IS_JS_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GWEB_ENGINE_TYPE_JS_RESULT))
#define GWEB_ENGINE_JS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GWEB_ENGINE_TYPE_JS_RESULT, GWebEngineJSResultClass))

typedef struct _GWebEngineJSResult GWebEngineJSResult;
typedef struct _GWebEngineJSResultClass GWebEngineJSResultClass;
typedef struct _GWebEngineJSResultPrivate GWebEngineJSResultPrivate;

typedef enum  {
	GWEB_ENGINE_PLUGIN_ERROR_NOT_SUPPORTED,
	GWEB_ENGINE_PLUGIN_ERROR_UNEXPECTED_TYPE,
	GWEB_ENGINE_PLUGIN_ERROR_NO_REGISTRATION_FUNCTION,
	GWEB_ENGINE_PLUGIN_ERROR_FAILED
} GWebEnginePluginError;
#define GWEB_ENGINE_PLUGIN_ERROR gweb_engine_plugin_error_quark ()

struct _GWebEnginePluginIface {
	GTypeInterface parent_iface;
	void (*registered) (GWebEnginePlugin* self, GWebEnginePluginLoader* loader);
	GWebEngineMain* (*activated) (GWebEnginePlugin* self, const gchar* data);
	void (*deactivated) (GWebEnginePlugin* self);
};

struct _GWebEnginePluginLoader {
	GObject parent_instance;
	GWebEnginePluginLoaderPrivate * priv;
};

struct _GWebEnginePluginLoaderClass {
	GObjectClass parent_class;
};

struct _GWebEngineMain {
	GObject parent_instance;
	GWebEngineMainPrivate * priv;
};

struct _GWebEngineMainClass {
	GObjectClass parent_class;
};

struct _GWebEngineEvent {
	GObject parent_instance;
	GWebEngineEventPrivate * priv;
};

struct _GWebEngineEventClass {
	GObjectClass parent_class;
};

struct _GWebEngineKeyEvent {
	GWebEngineEvent parent_instance;
	GWebEngineKeyEventPrivate * priv;
};

struct _GWebEngineKeyEventClass {
	GWebEngineEventClass parent_class;
};

struct _GWebEngineWebSettings {
	GObject parent_instance;
	GWebEngineWebSettingsPrivate * priv;
};

struct _GWebEngineWebSettingsClass {
	GObjectClass parent_class;
};

struct _GWebEngineWebView {
	GtkSocket parent_instance;
	GWebEngineWebViewPrivate * priv;
};

struct _GWebEngineWebViewClass {
	GtkSocketClass parent_class;
};

struct _GWebEngineJSResult {
	GObject parent_instance;
	GWebEngineJSResultPrivate * priv;
};

struct _GWebEngineJSResultClass {
	GObjectClass parent_class;
};

VALA_EXTERN GQuark gweb_engine_plugin_error_quark (void);
GType gweb_engine_plugin_error_get_type (void) G_GNUC_CONST ;
VALA_EXTERN GType gweb_engine_plugin_loader_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GWebEnginePluginLoader, g_object_unref)
VALA_EXTERN GType gweb_engine_main_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GWebEngineMain, g_object_unref)
VALA_EXTERN GType gweb_engine_plugin_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GWebEnginePlugin, g_object_unref)
VALA_EXTERN void gweb_engine_plugin_registered (GWebEnginePlugin* self,
                                    GWebEnginePluginLoader* loader);
VALA_EXTERN GWebEngineMain* gweb_engine_plugin_activated (GWebEnginePlugin* self,
                                              const gchar* data);
VALA_EXTERN void gweb_engine_plugin_deactivated (GWebEnginePlugin* self);
VALA_EXTERN GWebEnginePlugin* gweb_engine_plugin_loader_load (GWebEnginePluginLoader* self,
                                                  const gchar* path,
                                                  GError** error);
VALA_EXTERN GWebEnginePluginLoader* gweb_engine_plugin_loader_new (void);
VALA_EXTERN GWebEnginePluginLoader* gweb_engine_plugin_loader_construct (GType object_type);
VALA_EXTERN GWebEngineMain* gweb_engine_load_plugin (const gchar* path,
                                         const gchar* data,
                                         gchar** a,
                                         gint a_length1);
VALA_EXTERN GType gweb_engine_web_view_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GWebEngineWebView, g_object_unref)
VALA_EXTERN GWebEngineWebView* gweb_engine_main_make_webview (GWebEngineMain* self);
VALA_EXTERN void gweb_engine_main_main_quit (GWebEngineMain* self);
VALA_EXTERN void gweb_engine_main_iterate (GWebEngineMain* self);
VALA_EXTERN void gweb_engine_main_init (GWebEngineMain* self);
VALA_EXTERN GWebEngineMain* gweb_engine_main_new (void);
VALA_EXTERN GWebEngineMain* gweb_engine_main_construct (GType object_type);
VALA_EXTERN const gchar* gweb_engine_main_get_data (GWebEngineMain* self);
VALA_EXTERN void gweb_engine_main_set_data (GWebEngineMain* self,
                                const gchar* value);
VALA_EXTERN GType gweb_engine_event_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GWebEngineEvent, g_object_unref)
VALA_EXTERN GWebEngineEvent* gweb_engine_event_new (void);
VALA_EXTERN GWebEngineEvent* gweb_engine_event_construct (GType object_type);
VALA_EXTERN GType gweb_engine_key_event_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GWebEngineKeyEvent, g_object_unref)
VALA_EXTERN GWebEngineKeyEvent* gweb_engine_key_event_new (void);
VALA_EXTERN GWebEngineKeyEvent* gweb_engine_key_event_construct (GType object_type);
VALA_EXTERN const gchar* gweb_engine_key_event_get_text (GWebEngineKeyEvent* self);
VALA_EXTERN void gweb_engine_key_event_set_text (GWebEngineKeyEvent* self,
                                     const gchar* value);
VALA_EXTERN gint gweb_engine_key_event_get_modifiers (GWebEngineKeyEvent* self);
VALA_EXTERN void gweb_engine_key_event_set_modifiers (GWebEngineKeyEvent* self,
                                          gint value);
VALA_EXTERN gint gweb_engine_key_event_get_key (GWebEngineKeyEvent* self);
VALA_EXTERN void gweb_engine_key_event_set_key (GWebEngineKeyEvent* self,
                                    gint value);
VALA_EXTERN gint gweb_engine_key_event_get_scan_code (GWebEngineKeyEvent* self);
VALA_EXTERN void gweb_engine_key_event_set_scan_code (GWebEngineKeyEvent* self,
                                          gint value);
VALA_EXTERN gint gweb_engine_key_event_get_virtual_key (GWebEngineKeyEvent* self);
VALA_EXTERN void gweb_engine_key_event_set_virtual_key (GWebEngineKeyEvent* self,
                                            gint value);
VALA_EXTERN GType gweb_engine_web_settings_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GWebEngineWebSettings, g_object_unref)
VALA_EXTERN GWebEngineWebSettings* gweb_engine_web_settings_new (void);
VALA_EXTERN GWebEngineWebSettings* gweb_engine_web_settings_construct (GType object_type);
VALA_EXTERN gboolean gweb_engine_web_settings_get_javascript_enabled (GWebEngineWebSettings* self);
VALA_EXTERN void gweb_engine_web_settings_set_javascript_enabled (GWebEngineWebSettings* self,
                                                      gboolean value);
VALA_EXTERN gboolean gweb_engine_web_settings_get_fullscreen_enabled (GWebEngineWebSettings* self);
VALA_EXTERN void gweb_engine_web_settings_set_fullscreen_enabled (GWebEngineWebSettings* self,
                                                      gboolean value);
VALA_EXTERN gboolean gweb_engine_web_settings_get_plugins_enabled (GWebEngineWebSettings* self);
VALA_EXTERN void gweb_engine_web_settings_set_plugins_enabled (GWebEngineWebSettings* self,
                                                   gboolean value);
VALA_EXTERN gboolean gweb_engine_web_settings_get_webgl_enabled (GWebEngineWebSettings* self);
VALA_EXTERN void gweb_engine_web_settings_set_webgl_enabled (GWebEngineWebSettings* self,
                                                 gboolean value);
VALA_EXTERN GWebEngineWebView* gweb_engine_web_view_new (gint id,
                                             GWebEngineWebSettings* _settings);
VALA_EXTERN GWebEngineWebView* gweb_engine_web_view_construct (GType object_type,
                                                   gint id,
                                                   GWebEngineWebSettings* _settings);
VALA_EXTERN void gweb_engine_web_view_take (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_back (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_forward (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_reload (GWebEngineWebView* self);
VALA_EXTERN GType gweb_engine_js_result_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GWebEngineJSResult, g_object_unref)
VALA_EXTERN GWebEngineJSResult* gweb_engine_web_view_execute (GWebEngineWebView* self,
                                                  const gchar* code);
VALA_EXTERN void gweb_engine_web_view_load (GWebEngineWebView* self,
                                const gchar* url);
VALA_EXTERN gboolean gweb_engine_web_view_fullscreen_request (GWebEngineWebView* self,
                                                  gboolean toggle_on);
VALA_EXTERN void gweb_engine_web_view_fullscreen (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_unfullscreen (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_key_press (GWebEngineWebView* self,
                                     GWebEngineKeyEvent* e);
VALA_EXTERN gboolean gweb_engine_web_view_find (GWebEngineWebView* self,
                                    const gchar* text);
VALA_EXTERN const gchar* gweb_engine_web_view_get_title (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_set_title (GWebEngineWebView* self,
                                     const gchar* value);
VALA_EXTERN gboolean gweb_engine_web_view_get_can_go_back (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_set_can_go_back (GWebEngineWebView* self,
                                           gboolean value);
VALA_EXTERN gboolean gweb_engine_web_view_get_can_go_forward (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_set_can_go_forward (GWebEngineWebView* self,
                                              gboolean value);
VALA_EXTERN const gchar* gweb_engine_web_view_get_url (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_set_url (GWebEngineWebView* self,
                                   const gchar* value);
VALA_EXTERN gint gweb_engine_web_view_get_winid (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_set_winid (GWebEngineWebView* self,
                                     gint value);
VALA_EXTERN GWebEngineWebSettings* gweb_engine_web_view_get_settings (GWebEngineWebView* self);
VALA_EXTERN void gweb_engine_web_view_set_settings (GWebEngineWebView* self,
                                        GWebEngineWebSettings* value);
VALA_EXTERN GWebEngineJSResult* gweb_engine_js_result_new (void);
VALA_EXTERN GWebEngineJSResult* gweb_engine_js_result_construct (GType object_type);

G_END_DECLS

#endif
